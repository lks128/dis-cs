using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

namespace CA_PZ_10_1
{
    class Program
    {
        private Вектор v_вектор;

        void Заголовок(string s)
        {
            Console.WriteLine("===== {0} =====", s);
            Console.WriteLine();
        }

        void Инициализировать()
        {
            Заголовок("Инициализация вектора");

            int i_минимальныйИндекс;
            int i_максимальныйИндекс;

            СпроситьInt(out i_минимальныйИндекс, "начальный индекс");
            СпроситьInt(out i_максимальныйИндекс, "конечный индекс");

            v_вектор = new Вектор(i_минимальныйИндекс, i_максимальныйИндекс);

            Console.WriteLine();
            Console.WriteLine("--- Индексы вектора = {0}..{1}",
                v_вектор.НачальныйИндекс, v_вектор.КонечныйИндекс);
            Console.WriteLine("--- Длина вектора = {0}", v_вектор.Длина);
            Console.WriteLine();



            Заголовок("Заполнение вектора случайными числами");

            int i_минимальноеЗначение;
            int i_максимальноеЗначение;

            СпроситьInt(out i_минимальноеЗначение, "минимальное значение");
            СпроситьInt(out i_максимальноеЗначение, "максимальное значение");

            v_вектор.ЗаполнитьСлучайными(i_минимальноеЗначение, i_максимальноеЗначение);

            v_вектор.Распечатать("Результат заполнения вектора случайными числами");
        }

        void ДемонстрацияУмножения()
        {
            Заголовок("Умножение на скаляр");
            v_вектор.Распечатать("Текущий вектор");

            int i_множитель;

            СпроситьInt(out i_множитель, "множитель");

            v_вектор = v_вектор * i_множитель;
            v_вектор.Распечатать("Результат умножения вектора на скаляр");
        }

        void ДемонстрацияДеления()
        {
            Заголовок("Деление на скаляр");
            v_вектор.Распечатать("Текущий вектор");

            int i_делитель;

            СпроситьInt(out i_делитель, "делитель");

            v_вектор = v_вектор / i_делитель;
            v_вектор.Распечатать("Результат деления вектора на скаляр");
        }

        void ДемонстрацияСложения()
        {
            Заголовок("Сложение двух векторов");

            Вектор v_вектор2 = new Вектор(v_вектор.НачальныйИндекс, v_вектор.КонечныйИндекс);
            v_вектор2.ЗаполнитьСлучайными(v_вектор.МинимальноеЗначение, v_вектор.МаксимальноеЗначение);

            v_вектор.Распечатать("Вектор 1");
            v_вектор2.Распечатать("Вектор 2");

            v_вектор2 = v_вектор + v_вектор2;
            v_вектор2.Распечатать("Результат сложения векторов Вектор 1 + Вектор 2");
        }

        void ДемонстрацияВычитания()
        {
            Заголовок("Разность двух векторов");

            Вектор v_вектор2 = new Вектор(v_вектор.НачальныйИндекс, v_вектор.КонечныйИндекс);
            v_вектор2.ЗаполнитьСлучайными(v_вектор.МинимальноеЗначение, v_вектор.МаксимальноеЗначение);

            v_вектор.Распечатать("Вектор 1");
            v_вектор2.Распечатать("Вектор 2");

            v_вектор2 = v_вектор - v_вектор2;
            v_вектор2.Распечатать("Результат разности векторов Вектор 1 - Вектор 2");
        }

        void ДемонстрацияОбращенияИВывода()
        {
            Заголовок("Обращение к элементу по индексу и вывод на экран");

            Console.WriteLine("--- Индексы вектора = {0}..{1}",
                v_вектор.НачальныйИндекс, v_вектор.КонечныйИндекс);

            int i;

            СпроситьInt(out i, "индекс элемента");

            v_вектор.Распечатать(i);
        }

        void СпроситьInt(out int i_переменная, string s_текст, params object[] v_аргументы)
        {
            Console.Write("Введите " + String.Format(s_текст, v_аргументы) + ": ");
            i_переменная = Convert.ToInt32(Console.ReadLine());
        }

        static void Демонстрировать(Action v_демонстрация)
        {
            bool b_выполнено = false;

            Console.Clear();

            do
            {
                try
                {
                    v_демонстрация();
                    b_выполнено = true;
                }
                catch (Exception e)
                {
                    Console.WriteLine("ОШИБКА: {0}", e.Message);
                    Console.WriteLine();
                }
            }
            while (!b_выполнено);

            Console.WriteLine("Нажмите любую клавишу, чтобы продолжить демонстрацию.");
            Console.ReadKey();
        }

        static void Main(string[] args)
        {
            Program p = new Program();

            // Инициализация вектора с запросом на границы индексов
            Демонстрировать(p.Инициализировать);

            // Демонстрация умножения и деления на скаляр с запросом ввода
            Демонстрировать(p.ДемонстрацияУмножения);
            Демонстрировать(p.ДемонстрацияДеления);

            // Демонстрация сложения и вычитания
            Демонстрировать(p.ДемонстрацияСложения);
            Демонстрировать(p.ДемонстрацияВычитания);

            // Демонстрация обращения к элементу по индексу и выводу его на экран
            Демонстрировать(p.ДемонстрацияОбращенияИВывода);
        }
    }
}
